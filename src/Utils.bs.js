// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Result = require("./Result.bs.js");
var Js_dict = require("bs-platform/lib/js/js_dict.js");
var Js_json = require("bs-platform/lib/js/js_json.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");

function propertyExists(json, property) {
  var match = Js_json.classify(json);
  if (typeof match === "number" || match.tag !== /* JSONObject */2) {
    return false;
  } else {
    var match$1 = Js_dict.get(match[0], property);
    if (match$1 !== undefined) {
      var match$2 = Js_json.classify(Caml_option.valFromOption(match$1));
      if (typeof match$2 === "number") {
        return match$2 < 2;
      } else {
        return true;
      }
    } else {
      return false;
    }
  }
}

function mapResultAndResolvePromise(f, r) {
  return Promise.resolve(Result.$great$pipe(r, f));
}

function bindResultAndResolvePromise(f, r) {
  return Promise.resolve(Result.$great$great$eq(r, f));
}

exports.propertyExists = propertyExists;
exports.mapResultAndResolvePromise = mapResultAndResolvePromise;
exports.bindResultAndResolvePromise = bindResultAndResolvePromise;
/* No side effect */
