// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Os = require("os");
var $$Node = require("../bindings/Node.bs.js");
var Path = require("path");
var Curry = require("bs-platform/lib/js/curry.js");
var Vscode = require("vscode");
var FormatterUtils = require("./FormatterUtils.bs.js");

function register(param) {
  Vscode.languages.registerDocumentFormattingEditProvider({
        scheme: "file",
        language: "reason"
      }, {
        provideDocumentFormattingEdits: (function (param) {
            var formatter = "bsrefmt";
            var match = Vscode.window.activeTextEditor;
            if (match !== undefined) {
              if (formatter !== undefined) {
                var formatter$1 = formatter;
                var textEditor = match;
                var tempFileName = Path.join(Os.tmpdir(), "vscode-reasonml-refmt-SOMETHING.re");
                return $$Node.Fs.writeFile(tempFileName, Curry._1(textEditor.document.getText, /* () */0)).then((function (f) {
                                  return $$Node.ChildProcess.exec("" + (String(formatter$1) + (" " + (String(tempFileName) + ""))), { });
                                })).then((function (param) {
                                var textRange = FormatterUtils.getFullTextRange(textEditor.document);
                                $$Node.Fs.unlink(tempFileName);
                                return Promise.resolve(/* array */[Vscode.TextEdit.replace(textRange, param[0])]);
                              })).catch((function (e) {
                              var message = $$Node.$$Error.ofPromiseError(e);
                              return Vscode.window.showErrorMessage("Error: " + (String(message) + ""));
                            }));
              } else {
                return Promise.resolve(/* array */[]);
              }
            } else {
              return Promise.resolve(/* array */[]);
            }
          })
      });
  return /* () */0;
}

exports.register = register;
/* os Not a pure module */
